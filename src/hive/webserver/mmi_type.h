#pragma once

#include <core/wrapper.h>

static const char *s_aMMITypes[][2] ={
	{ ".dwg", "application/acad" },
	{ ".asd", "application/astound" },
	{ ".asn", "application/astound" },
	{ ".tsp", "application/dsptype" },
	{ ".dxf", "application/dxf" },
	{ ".reg", "application/force-download" },
	{ ".spl", "application/futuresplash" },
	{ ".gz", "application/gzip" },
	{ ".js", "application/javascript" },
	{ ".json", "application/json" },
	{ ".ptlk", "application/listenup" },
	{ ".hqx", "application/mac-binhex40" },
	{ ".mbd", "application/mbedlet" },
	{ ".mif", "application/mif" },
	{ ".xls", "application/msexcel" },
	{ ".xla", "application/msexcel" },
	{ ".hlp", "application/mshelp" },
	{ ".chm", "application/mshelp" },
	{ ".ppt", "application/mspowerpoint" },
	{ ".ppz", "application/mspowerpoint" },
	{ ".pps", "application/mspowerpoint" },
	{ ".pot", "application/mspowerpoint" },
	{ ".doc", "application/msword" },
	{ ".dot", "application/msword" },
	{ ".ini", "application/octet-stream" },
	{ ".class", "application/octet-stream" },
	{ ".com", "application/octet-stream" },
	{ ".file", "application/octet-stream" },
	{ ".bin", "application/octet-stream" },
	{ ".oda", "application/oda" },
	{ ".pdf", "application/pdf" },
	{ ".ps", "application/postscript" },
	{ ".eps", "application/postscript" },
	{ ".ai", "application/postscript" },
	{ ".rtc", "application/rtc" },
	{ ".rtf", "application/rtf" },
	{ ".smp", "application/studiom" },
	{ ".tbk", "application/toolbook" },
	{ ".vmd", "application/vocaltec-media-desc" },
	{ ".vmf", "application/vocaltec-media-file" },
	{ ".xlsx", "application/vnd.openxmlformats - officedocument.spreadsheetml.sheet" },
	{ ".docx", "application/vnd.openxmlformats - officedocument.wordprocessingml.document " },
	{ ".htm", "application/xhtml+xml" },
	{ ".html", "application/xhtml+xml" },
	{ ".shtml", "application/xhtml+xml" },
	{ ".xhtml", "application/xhtml+xml" },
	{ ".xml", "application/xml" },
	{ ".bcpio", "application/x-bcpio" },
	{ ".z", "application/x-compress" },
	{ ".cpio", "application/x-cpio" },
	{ ".csh", "application/x-csh" },
	{ ".dcr", "application/x-director" },
	{ ".dir", "application/x-director" },
	{ ".dxr", "application/x-director" },
	{ ".dvi", "application/x-dvi" },
	{ ".evy", "application/x-envoy" },
	{ ".gtar", "application/x-gtar" },
	{ ".hdf", "application/x-hdf" },
	{ ".php", "application/x-httpd-php" },
	{ ".phtml", "application/x-httpd-php" },
	{ ".latex", "application/x-latex" },
	{ ".bin", "application/x-macbinary" },
	{ ".mif", "application/x-mif" },
	{ ".nc", "application/x-netcdf" },
	{ ".cdf", "application/x-netcdf" },
	{ ".nsc", "application/x-nschat" },
	{ ".sh", "application/x-sh" },
	{ ".shar", "application/x-shar" },
	{ ".cab", "application/x-shockwave-flash" },
	{ ".swf", "application/x-shockwave-flash" },
	{ ".spr", "application/x-sprite" },
	{ ".sprite", "application/x-sprite" },
	{ ".sit", "application/x-stuffit" },
	{ ".sca", "application/x-supercard" },
	{ ".sv4cpio", "application/x-sv4cpio" },
	{ ".sv4crc", "application/x-sv4crc" },
	{ ".tar", "application/x-tar" },
	{ ".tcl", "application/x-tcl" },
	{ ".tex", "application/x-tex" },
	{ ".texi", "application/x-texinfo" },
	{ ".texinfo", "application/x-texinfo" },
	{ ".t", "application/x-troff" },
	{ ".tr", "application/x-troff" },
	{ ".roff", "application/x-troff" },
	{ ".man", "application/x-troff-man" },
	{ ".troff", "application/x-troff-man" },
	{ ".me", "application/x-troff-me" },
	{ ".troff", "application/x-troff-me" },
	{ ".me", "application/x-troff-ms" },
	{ ".troff", "application/x-troff-ms" },
	{ ".ustar", "application/x-ustar" },
	{ ".src", "application/x-wais-source" },
	{ ".zip", "application/zip" },
	{ ".au", "audio/basic" },
	{ ".snd", "audio/basic" },
	{ ".es", "audio/echospeech" },
	{ ".mp3", "audio/mpeg" },
	{ ".mp4", "audio/mp4" },
	{ ".ogg", "audio/ogg" },
	{ ".tsi", "audio/tsplayer" },
	{ ".vox", "audio/voxware" },
	{ ".wav", "audio/wav" },
	{ ".aif", "audio/x-aiff" },
	{ ".aiff", "audio/x-aiff" },
	{ ".aifc", "audio/x-aiff" },
	{ ".dus", "audio/x-dspeeh" },
	{ ".cht", "audio/x-dspeeh" },
	{ ".mid", "audio/x-midi" },
	{ ".midi", "audio/x-midi" },
	{ ".mp2", "audio/x-mpeg" },
	{ ".ram", "audio/x-pn-realaudio" },
	{ ".ra", "audio/x-pn-realaudio" },
	{ ".rpm", "audio/x-pn-realaudio-plugin" },
	{ ".stream", "audio/x-qt-stream" },
	{ ".dwf", "drawing/x-dwf" },
	{ ".bmp", "image/bmp" },
	{ ".cod", "image/cis-cod" },
	{ ".ras", "image/cmu-raster" },
	{ ".fif", "image/fif" },
	{ ".gif", "image/gif" },
	{ ".ief", "image/ief" },
	{ ".jpeg", "image/jpeg" },
	{ ".jpg", "image/jpeg" },
	{ ".jpe", "image/jpeg" },
	{ ".syp", "image/jpeg" },
	{ ".png", "image/png" },
	{ ".svg", "image/svg+xml" },
	{ ".tiff", "image/tiff" },
	{ ".tif", "image/tiff" },
	{ ".mcf", "image/vasa" },
	{ ".wbmp", "image/vnd.wap.wbmp" },
	{ ".fh4", "image/x-freehand" },
	{ ".fh5", "image/x-freehand" },
	{ ".fhc", "image/x-freehand" },
	{ ".ico", "image/x-icon" },
	{ ".pnm", "image/x-portable-anymap" },
	{ ".pbm", "image/x-portable-bitmap" },
	{ ".pgm", "image/x-portable-graymap" },
	{ ".ppm", "image/x-portable-pixmap" },
	{ ".rgb", "image/x-rgb" },
	{ ".xwd", "image/x-windowdump" },
	{ ".xbm", "image/x-xbitmap" },
	{ ".xpm", "image/x-xpixmap" },
	{ ".wrl", "model/vrml" },
	{ ".csv", "text/comma-separated-values" },
	{ ".css", "text/css" },
	{ ".htm", "text/html" },
	{ ".html", "text/html" },
	{ ".shtml", "text/html" },
	{ ".js", "text/javascript" },
	{ ".txt", "text/plain" },
	{ ".rtf", "text/richtext" },
	{ ".tsv", "text/tab-separated-values" },
	{ ".wml", "text/vnd.wap.wml" },
	{ ".wmlc", "application/vnd.wap.wmlc" },
	{ ".wmls", "text/vnd.wap.wmlscript" },
	{ ".wmlsc", "application/vnd.wap.wmlscriptc" },
	{ ".xml", "text/xml" },
	{ ".etx", "text/x-setext" },
	{ ".sgm", "text/x-sgml" },
	{ ".sgml", "text/x-sgml" },
	{ ".talk", "text/x-speech" },
	{ ".spc", "text/x-speech" },
	{ ".mpeg", "video/mpeg" },
	{ ".mpg", "video/mpeg" },
	{ ".mpe", "video/mpeg" },
	{ ".mp4", "video/mp4" },
	{ ".ogg", "video/ogg" },
	{ ".ogv", "video/ogg" },
	{ ".mov", "video/quicktime" },
	{ ".qt", "video/quicktime" },
	{ ".viv", "video/vnd.vivo" },
	{ ".vivo", "video/vnd.vivo" },
	{ ".webm", "video/webm" },
	{ ".avi", "video/x-msvideo" },
	{ ".movie", "video/x-sgi-movie" },
	{ ".vts", "workbook/formulaone" },
	{ ".vtts", "workbook/formulaone" },
	{ ".3dmf", "x-world/x-3dmf" },
	{ ".3dm", "x-world/x-3dmf" },
	{ ".qd3d", "x-world/x-3dmf" },
	{ ".qd3", "x-world/x-3dmf" },
	{ ".wrl", "x-world/x-vrml" },
};

static const char *GetMMIType(const char *pFile)
{
	int NumTypes = sizeof(s_aMMITypes) / sizeof(s_aMMITypes[0]);

	for (int i = 0; i < NumTypes; i++)
	{
		int Len = str_length(s_aMMITypes[i][0]);
		if (str_comp_nocase(s_aMMITypes[i][0], pFile + str_length(pFile) - Len) == 0)
			return s_aMMITypes[i][1];
	}

	return "application/octet-stream";
}